// Shared configurations for BucikaGSR
// This file provides dependency management and common configurations

// Version management
project.ext.bucika_versions = [
    kotlin: '2.0.0',
    gradle_plugin: '8.1.4',
    ksp: '2.0.0-1.0.21',
    
    // Core dependencies
    androidx_core: '1.8.0',
    androidx_appcompat: '1.4.1',
    material: '1.5.0',
    lifecycle: '2.4.1',
    fragment: '1.4.1',
    
    // Networking
    retrofit: '2.9.0',
    okhttp: '4.11.0',
    gson: '2.10.1',
    
    // Image loading
    glide: '4.16.0',
    
    // Utilities
    utilcodex: '1.30.6',
    xxpermissions: '13.2',
    eventbus: '3.2.0',
    lottie: '6.1.0',
    
    // GSR and BLE specific
    rxjava: '2.2.21',
    rxandroid: '2.1.1',
    xlog: '1.10.1',
    
    // UI Components
    smartrefresh: '1.1.3',
    recyclerview_helper: '3.0.7',
    
    // Video processing
    gsy_video: 'v8.1.4'
]

// Common configurations for all modules
project.ext.applyCommonConfig = { Project module ->
    module.android {
        compileSdk project.ext.android.compileSdk
        
        defaultConfig {
            minSdk project.ext.android.minSdk
            targetSdk project.ext.android.targetSdk
            
            if (module.name == 'app') {
                applicationId project.ext.android.applicationId
                versionCode project.ext.android.versionCode
                versionName project.ext.android.versionName
                ndkVersion project.ext.android.ndkVersion
            }
        }
        
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }
        
        kotlinOptions {
            jvmTarget = '17'
        }
        
        buildFeatures {
            buildConfig true
            viewBinding true
            dataBinding true
        }
        
        // Common product flavors for all modules
        if (module.name != 'LocalRepo:libcommon' && module.name != 'LocalRepo:libirutils') {
            flavorDimensions 'app'
            productFlavors {
                dev {
                    dimension 'app'
                }
                beta {
                    dimension 'app'
                }
                prod {
                    dimension 'app'
                }
                prodTopdon {
                    dimension 'app'
                }
                insideChina {
                    dimension 'app'
                }
                prodTopdonInsideChina {
                    dimension 'app'
                }
            }
        }
    }
}

// GSR-specific dependencies
project.ext.bucika_dependencies = [
    // Core Android dependencies
    core: [
        "androidx.core:core-ktx:${bucika_versions.androidx_core}",
        "androidx.appcompat:appcompat:${bucika_versions.androidx_appcompat}",
        "com.google.android.material:material:${bucika_versions.material}",
        "androidx.lifecycle:lifecycle-runtime-ktx:${bucika_versions.lifecycle}",
        "androidx.lifecycle:lifecycle-viewmodel-ktx:${bucika_versions.lifecycle}",
        "androidx.lifecycle:lifecycle-livedata-ktx:${bucika_versions.lifecycle}",
        "androidx.fragment:fragment-ktx:${bucika_versions.fragment}"
    ],
    
    // BLE and GSR specific
    ble_gsr: [
        "org.greenrobot:eventbus:${bucika_versions.eventbus}",
        "com.elvishew:xlog:${bucika_versions.xlog}",
        "io.reactivex.rxjava2:rxjava:${bucika_versions.rxjava}",
        "io.reactivex.rxjava2:rxandroid:${bucika_versions.rxandroid}",
        "com.tbruyelle.rxpermissions2:rxpermissions:0.9.5"
    ],
    
    // Networking
    networking: [
        "com.squareup.retrofit2:retrofit:${bucika_versions.retrofit}",
        "com.squareup.retrofit2:converter-gson:${bucika_versions.retrofit}",
        "com.squareup.okhttp3:okhttp:${bucika_versions.okhttp}",
        "com.google.code.gson:gson:${bucika_versions.gson}"
    ],
    
    // UI
    ui: [
        "com.github.bumptech.glide:glide:${bucika_versions.glide}",
        "com.airbnb.android:lottie:${bucika_versions.lottie}",
        "com.scwang.smartrefresh:SmartRefreshLayout:${bucika_versions.smartrefresh}",
        "com.scwang.smartrefresh:SmartRefreshHeader:${bucika_versions.smartrefresh}",
        "com.github.CymChad:BaseRecyclerViewAdapterHelper:${bucika_versions.recyclerview_helper}"
    ],
    
    // Utilities
    utilities: [
        "com.blankj:utilcodex:${bucika_versions.utilcodex}",
        "com.github.getActivity:XXPermissions:${bucika_versions.xxpermissions}"
    ],
    
    // Thermal IR and GSY Video
    multimedia: [
        "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:${bucika_versions.gsy_video}",
        "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-exo_player2:${bucika_versions.gsy_video}",
        "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv64:${bucika_versions.gsy_video}"
    ]
]

// Validation function to check all modules have proper configurations
project.ext.validateModuleConfigs = {
    def requiredModules = [
        ':app', ':libapp', ':libcom', ':libir', ':libmenu', ':libui',
        ':BleModule', ':component:thermal-ir', ':component:CommonComponent',
        ':LocalRepo:libcommon', ':LocalRepo:libirutils', ':RangeSeekBar',
        ':commonlibrary'
    ]
    
    requiredModules.each { moduleName ->
        def moduleProject = project.findProject(moduleName)
        if (moduleProject == null) {
            throw new GradleException("Required module ${moduleName} not found in settings.gradle")
        }
    }
    
    println "✓ All required modules found and configured"
}

// Build optimization settings
project.ext.applyBuildOptimizations = {
    // Simple build optimizations - applied in individual module build.gradle files
    println "✓ Build optimizations configuration applied"
}

println "BucikaGSR shared setup loaded successfully"